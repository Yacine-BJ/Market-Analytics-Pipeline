services:

  mysql:
    image: mysql:9.0
    container_name: mysql
    restart: always
    environment:
      MYSQL_ROOT_PASSWORD: root
      MYSQL_DATABASE: exercice
      MYSQL_USER: test
      MYSQL_PASSWORD: test
    ports:
      - "3306:3306"
    networks:
      - etl
    volumes:
      - mysql_data:/var/lib/mysql

  grafana:
    image: grafana/grafana-oss:9.5.18
    container_name: grafana
    # ADDED: Run the container as the grafana user to ensure correct permissions
    user: "472"
    ports:
      - "3000:3000"
    environment:
      # This line tells Grafana to install the free MongoDB plugin on startup
      - GF_INSTALL_PLUGINS=mongodb-datasource
    depends_on:
      - mongodb
    networks:
      - etl
  

  mongodb:
    image: mongo:6.0
    container_name: mongodb
    restart: always
    environment:
      MONGO_INITDB_ROOT_USERNAME: root
      MONGO_INITDB_ROOT_PASSWORD: root
    ports:
      - "27017:27017"
    networks:
      - etl
    volumes:
      - mongo_data:/data/db

  kafka:
    image: bitnami/kafka:latest
    container_name: kafka
    ports:
      - "9094:9094"
    environment:
      KAFKA_CFG_NODE_ID: 0
      KAFKA_CFG_CONTROLLER_BROKER_ID: 0
      KAFKA_CFG_PROCESS_ROLES: controller,broker
      KAFKA_CFG_LISTENERS: PLAINTEXT://:9092,CONTROLLER://:9093,EXTERNAL://:9094
      KAFKA_CFG_ADVERTISED_LISTENERS: PLAINTEXT://kafka:9092,EXTERNAL://localhost:9094
      KAFKA_CFG_LISTENER_SECURITY_PROTOCOL_MAP: CONTROLLER:PLAINTEXT,EXTERNAL:PLAINTEXT,PLAINTEXT:PLAINTEXT
      KAFKA_CFG_CONTROLLER_QUORUM_VOTERS: 0@kafka:9093
      KAFKA_CFG_CONTROLLER_LISTENER_NAMES: CONTROLLER
    networks:
      - etl

  kafka-ui:
    image: provectuslabs/kafka-ui:latest
    container_name: kafka-ui
    depends_on:
      - kafka
    ports:
      - "8081:8080"
    environment:
      KAFKA_CLUSTERS_0_NAME: local
      KAFKA_CLUSTERS_0_BOOTSTRAPSERVERS: kafka:9092
    networks:
      - etl

  spark:
    image: jupyter/all-spark-notebook:x86_64-ubuntu-22.04
    container_name: spark
    command: start.sh jupyter lab --NotebookApp.token=''
    ports:
      - "8888:8888"
      - "8080:8080"
      - "7077:7077"
    volumes:
      - ./spark_notebooks:/home/jovyan/ateliers
      - ./spark_checkpoints:/tmp/checkpoint 
    environment:
      JUPYTER_ENABLE_LAB: "no"
    depends_on:
      - kafka
    networks:
      - etl

networks:
  etl:
    driver: bridge

volumes:
  mysql_data:
  mongo_data: